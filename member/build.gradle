buildscript {

    ext {
        springBootVersion = '2.7.5'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE"

    }
}
allprojects {
    group = 'com.cofound.member'
    version = '1.0'
}



subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
    }
    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

    }


}

project (':member-application'){
    ext {
        springCloudVersion ='2021.0.4'
    }
    dependencyManagement{
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-starter-config'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

        implementation ("io.jsonwebtoken:jjwt:0.9.1")
//        implementation ('org.springframework.boot:spring-boot-starter-security:2.7.5')
        implementation project (':domain:member:member-dto')

        implementation project (':member-core:member-domain')
        implementation project (':member-configuration:member-swagger');
        implementation('io.r2dbc:r2dbc-h2:0.9.1.RELEASE')

        // 현재 주석으로 web / webflux 구분해둔 상태
        // todo : profile로 구분하여 실행하도록 처리하거나 둘 다 처리하는 방식 필요
        implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation project (':domain:member:member-flux')
        implementation project (':domain:member:member-r2dbc')
//        implementation project (':member-configuration:member-security-flux');

//        implementation project (':member-configuration:member-security')
//        implementation project (':domain:member:member-service')
//        implementation project (':domain:member:member-jpa')
//        implementation ("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")

    }

}
